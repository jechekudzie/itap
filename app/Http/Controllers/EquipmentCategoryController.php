<?php

namespace App\Http\Controllers;

use App\Models\EquipmentCategory;
use Illuminate\Http\Request;
use Illuminate\Support\Str;

class EquipmentCategoryController extends Controller
{
    /**
     * Display a listing of the equipment categories.
     */
    public function index()
    {
        $categories = EquipmentCategory::withCount('equipment')->get();
        return view('admin.equipment-categories.index', compact('categories'));
    }

    /**
     * Show the form for creating a new equipment category.
     */
    public function create()
    {
        return view('admin.equipment-categories.create');
    }

    /**
     * Store a newly created equipment category in storage.
     */
    public function store(Request $request)
    {
        $validatedData = $request->validate([
            'name' => 'required|max:255|unique:equipment_categories',
            'description' => 'nullable|string',
        ]);

        // Slug is automatically generated by the model
        $category = EquipmentCategory::create($validatedData);

        return redirect()
            ->route('equipment-categories.index')
            ->with('success', 'Equipment category created successfully.');
    }

    /**
     * Display the specified equipment category.
     */
    public function show(EquipmentCategory $equipmentCategory)
    {
        $equipmentCategory->load(['equipment', 'specificationTemplates']);
        return view('admin.equipment-categories.show', compact('equipmentCategory'));
    }

    /**
     * Show the form for editing the specified equipment category.
     */
    public function edit(EquipmentCategory $equipmentCategory)
    {
        return view('admin.equipment-categories.edit', compact('equipmentCategory'));
    }

    /**
     * Update the specified equipment category in storage.
     */
    public function update(Request $request, EquipmentCategory $equipmentCategory)
    {
        $validatedData = $request->validate([
            'name' => 'required|max:255|unique:equipment_categories,name,' . $equipmentCategory->id,
            'description' => 'nullable|string',
        ]);

        $equipmentCategory->update($validatedData);

        return redirect()
            ->route('equipment-categories.index')
            ->with('success', 'Equipment category updated successfully.');
    }

    /**
     * Remove the specified equipment category from storage.
     */
    public function destroy(EquipmentCategory $equipmentCategory)
    {
        // Check if category has equipment
        if ($equipmentCategory->equipment()->count() > 0) {
            return redirect()
                ->route('equipment-categories.index')
                ->with('error', 'Cannot delete category that contains equipment.');
        }

        $equipmentCategory->delete();

        return redirect()
            ->route('equipment-categories.index')
            ->with('success', 'Equipment category deleted successfully.');
    }

    
    public function getSpecificationTemplates($categoryId)
    {

        $equipmentCategory = EquipmentCategory::find($categoryId);

        return response()->json(
            $equipmentCategory->specificationTemplates()->get()
        );
    }
}
